// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
model User {
  id                  Int              @id @default(autoincrement())
  email               String           @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  todoLists TodoList[]
  webAuthnChallenge   String?          @unique
  credentials         UserCredential[]
}

model UserCredential {
  id         String  @id
  userId     Int
  user       User    @relation(fields: [userId], references: [id])
  publicKey  Bytes
  transports String?
  counter    BigInt
}

model TodoList {
  id        Int         @id @default(autoincrement())
  title     String
  createdAt DateTime    @default(now())
  userId    Int         // Foreign key to User
  user      User        @relation(fields: [userId], references: [id])
  items     TodoItem[]  // Relation field to TodoItem
}

model TodoItem {
  id          Int       @id @default(autoincrement())
  text        String
  isDone      Boolean   @default(false)
  createdAt   DateTime  @default(now())
  todoListId  Int       // Foreign key to TodoList
  todoList    TodoList  @relation(fields: [todoListId], references: [id])
}
